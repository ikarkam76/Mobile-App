{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useCallback, useState, useEffect } from \"react\";\nimport * as SplashScreen from \"expo-splash-screen\";\nimport * as Font from \"expo-font\";\nimport AppLoading from \"expo-app-loading\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\nimport { Main } from \"./components/Main\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    appIsReady = _useState2[0],\n    setAppIsReady = _useState2[1];\n  useEffect(function () {\n    function prepare() {\n      return _prepare.apply(this, arguments);\n    }\n    function _prepare() {\n      _prepare = _asyncToGenerator(function* () {\n        try {\n          yield Font.loadAsync({\n            \"Roboto-400\": require(\"./assets/fonts/Roboto-Regular.ttf\"),\n            \"Roboto-500\": require(\"./assets/fonts/Roboto-Medium.ttf\")\n          });\n        } catch (e) {\n          console.warn(e);\n        } finally {\n          setAppIsReady(true);\n        }\n      });\n      return _prepare.apply(this, arguments);\n    }\n    prepare();\n  }, []);\n  var onLayoutRootView = useCallback(_asyncToGenerator(function* () {\n    if (appIsReady) {\n      yield SplashScreen.hideAsync();\n    }\n  }), [appIsReady]);\n  if (!appIsReady) {\n    return null;\n  }\n  return _jsx(Provider, {\n    store: store,\n    children: _jsx(Main, {\n      onLayout: onLayoutRootView\n    })\n  });\n}","map":{"version":3,"names":["React","useCallback","useState","useEffect","SplashScreen","Font","AppLoading","Provider","store","Main","App","appIsReady","setAppIsReady","prepare","loadAsync","require","e","console","warn","onLayoutRootView","hideAsync"],"sources":["C:/Projects/React Native/Mobile App/App.js"],"sourcesContent":["import React, { useCallback, useState, useEffect } from \"react\";\r\nimport * as SplashScreen from \"expo-splash-screen\";\r\nimport * as Font from \"expo-font\";\r\nimport AppLoading from \"expo-app-loading\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport { store } from \"./redux/store\";\r\nimport { Main } from \"./components/Main\";\r\n\r\n\r\nexport default function App() {\r\n  const [appIsReady, setAppIsReady] = useState(false);\r\n\r\n  useEffect(() => {\r\n    async function prepare() {\r\n      try {\r\n        await Font.loadAsync({\r\n          \"Roboto-400\": require(\"./assets/fonts/Roboto-Regular.ttf\"),\r\n          \"Roboto-500\": require(\"./assets/fonts/Roboto-Medium.ttf\"),\r\n        });\r\n      } catch (e) {\r\n        console.warn(e);\r\n      } finally {\r\n        setAppIsReady(true);\r\n      }\r\n    }\r\n    prepare();\r\n  }, []);\r\n\r\n  const onLayoutRootView = useCallback(async () => {\r\n    if (appIsReady) {\r\n      await SplashScreen.hideAsync();\r\n    }\r\n  }, [appIsReady]);\r\n\r\n  if (!appIsReady) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Provider store={store}>\r\n      <Main onLayout={onLayoutRootView} />\r\n    </Provider>\r\n  );\r\n}\r\n\r\n\r\n\r\n  // const loadFonts = async () => {\r\n  //   try {\r\n  //   } catch (error) {\r\n  //     console.warn(error.message);\r\n  //   }\r\n  // };\r\n  \r\n\r\n  \r\n//   if (!isFontsReady) {\r\n//     return (\r\n//       <AppLoading\r\n//         startAsync={loadFonts}\r\n//         onFinish={() => setIsFontsReady(true)}\r\n//         onError={console.warn}\r\n//       />\r\n//     ); \r\n//   }\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,WAAW,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC/D,OAAO,KAAKC,YAAY,MAAM,oBAAoB;AAClD,OAAO,KAAKC,IAAI,MAAM,WAAW;AACjC,OAAOC,UAAU,MAAM,kBAAkB;AACzC,SAASC,QAAQ,QAAQ,aAAa;AAEtC,SAASC,KAAK;AACd,SAASC,IAAI;AAA4B;AAGzC,eAAe,SAASC,GAAG,GAAG;EAC5B,gBAAoCR,QAAQ,CAAC,KAAK,CAAC;IAAA;IAA5CS,UAAU;IAAEC,aAAa;EAEhCT,SAAS,CAAC,YAAM;IAAA,SACCU,OAAO;MAAA;IAAA;IAAA;MAAA,6BAAtB,aAAyB;QACvB,IAAI;UACF,MAAMR,IAAI,CAACS,SAAS,CAAC;YACnB,YAAY,EAAEC,OAAO,qCAAqC;YAC1D,YAAY,EAAEA,OAAO;UACvB,CAAC,CAAC;QACJ,CAAC,CAAC,OAAOC,CAAC,EAAE;UACVC,OAAO,CAACC,IAAI,CAACF,CAAC,CAAC;QACjB,CAAC,SAAS;UACRJ,aAAa,CAAC,IAAI,CAAC;QACrB;MACF,CAAC;MAAA;IAAA;IACDC,OAAO,EAAE;EACX,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMM,gBAAgB,GAAGlB,WAAW,mBAAC,aAAY;IAC/C,IAAIU,UAAU,EAAE;MACd,MAAMP,YAAY,CAACgB,SAAS,EAAE;IAChC;EACF,CAAC,GAAE,CAACT,UAAU,CAAC,CAAC;EAEhB,IAAI,CAACA,UAAU,EAAE;IACf,OAAO,IAAI;EACb;EAEA,OACE,KAAC,QAAQ;IAAC,KAAK,EAAEH,KAAM;IAAA,UACrB,KAAC,IAAI;MAAC,QAAQ,EAAEW;IAAiB;EAAG,EAC3B;AAEf"},"metadata":{},"sourceType":"module"}